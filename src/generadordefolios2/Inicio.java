    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package generadordefolios2;

import java.awt.Toolkit;


import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.util.*;
import javax.swing.JTextField;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;


/**
 *
 * @author CAPUFE
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
   
    //Variable Global privada del puesto de usuario
    private String puestoUsuario;
   
     //Variable Global privada del folio generado
    private String folio;
    
    public String tabla;
    
    //Variable Globlal del ComboBox
    public String departamentos = "";

    private ConexionBD conexion;
    
    public Inicio() {
        initComponents();
        inicializarValidacionDeNivel();
        mostrarFolios();
        configurarCampoDirigido();
        
        //Se crea una instancia de ConexinBD
        conexion = new ConexionBD();
        
        //Establecer el evento WindowOpened del formulario para que llame al método formWindowOpened(),
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt){
                formWindowOpened(evt);
               
            }
        });
             
        setLocationRelativeTo(null);
        setResizable(false);
         
        //-------Extracion de la Fecha actual-------------
        jCalendario.setDate(new Date());

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        TituloPrograma = new javax.swing.JLabel();
        DepartamentoLb = new javax.swing.JLabel();
        CmbDepartamentos = new javax.swing.JComboBox<>();
        DirigidoLb = new javax.swing.JLabel();
        AsuntoLb = new javax.swing.JLabel();
        dirigidoTxtF = new javax.swing.JTextField();
        EPorTextF = new javax.swing.JTextField();
        FechaLb = new javax.swing.JLabel();
        ElaboradoLb = new javax.swing.JLabel();
        btnGenFolio = new javax.swing.JButton();
        imgCAPUFE = new javax.swing.JLabel();
        jCalendario = new com.toedter.calendar.JDateChooser();
        BtnMostarVentana2 = new javax.swing.JButton();
        BtnSalir = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TxtAreaAsunto = new javax.swing.JTextArea();
        acercaBtn = new javax.swing.JButton();
        agregarAnioBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        EmpleadoLb = new javax.swing.JLabel();
        nombreLabel = new javax.swing.JLabel();
        apellidoLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        MisFoliosLb = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        foliosLista = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generador de Oficios - CAPUFE");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        TituloPrograma.setFont(new java.awt.Font("Montserrat", 0, 36)); // NOI18N
        TituloPrograma.setText("Generador de Oficios");

        DepartamentoLb.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        DepartamentoLb.setText("Departamento");

        CmbDepartamentos.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        CmbDepartamentos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Gerencia", "Subgerencia de Administración", "Subgerencia Técnica", "Subgerencia de Operación", "Subgerencia Juridica" }));
        CmbDepartamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbDepartamentosActionPerformed(evt);
            }
        });

        DirigidoLb.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        DirigidoLb.setText("Dirigido a");

        AsuntoLb.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        AsuntoLb.setText("Asunto");

        dirigidoTxtF.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        dirigidoTxtF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dirigidoTxtFActionPerformed(evt);
            }
        });

        EPorTextF.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        EPorTextF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EPorTextFActionPerformed(evt);
            }
        });

        FechaLb.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        FechaLb.setText("Fecha");

        ElaboradoLb.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        ElaboradoLb.setText("Elaborado por");

        btnGenFolio.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        btnGenFolio.setText("Generar Oficio");
        btnGenFolio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenFolioActionPerformed(evt);
            }
        });

        imgCAPUFE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/image-removebg-preview.png"))); // NOI18N

        BtnMostarVentana2.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        BtnMostarVentana2.setText("Consultar Oficios Generales");
        BtnMostarVentana2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMostarVentana2ActionPerformed(evt);
            }
        });

        BtnSalir.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        BtnSalir.setText("Salir");
        BtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirActionPerformed(evt);
            }
        });

        TxtAreaAsunto.setColumns(20);
        TxtAreaAsunto.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        TxtAreaAsunto.setLineWrap(true);
        TxtAreaAsunto.setRows(5);
        TxtAreaAsunto.setPreferredSize(new java.awt.Dimension(491, 100));
        jScrollPane2.setViewportView(TxtAreaAsunto);

        acercaBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/acerca.png"))); // NOI18N
        acercaBtn.setBorder(null);
        acercaBtn.setBorderPainted(false);
        acercaBtn.setContentAreaFilled(false);
        acercaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acercaBtnActionPerformed(evt);
            }
        });

        agregarAnioBtn.setText("Añadir nuevo año");
        agregarAnioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarAnioBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TituloPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(imgCAPUFE, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(DirigidoLb)
                .addGap(277, 277, 277)
                .addComponent(ElaboradoLb))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(dirigidoTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addComponent(EPorTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(AsuntoLb))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(BtnMostarVentana2)
                .addGap(132, 132, 132)
                .addComponent(btnGenFolio)
                .addGap(140, 140, 140)
                .addComponent(BtnSalir))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(DepartamentoLb))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(428, 428, 428)
                                .addComponent(FechaLb)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(CmbDepartamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(jCalendario, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(acercaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(agregarAnioBtn))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(205, 205, 205))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(TituloPrograma))
                    .addComponent(imgCAPUFE, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(DepartamentoLb))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(acercaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(FechaLb))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CmbDepartamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCalendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agregarAnioBtn))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DirigidoLb)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(ElaboradoLb)))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dirigidoTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EPorTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(AsuntoLb)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnMostarVentana2)
                    .addComponent(btnGenFolio)
                    .addComponent(BtnSalir)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        EmpleadoLb.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        EmpleadoLb.setText("Empleado:");

        nombreLabel.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        nombreLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nombreLabel.setToolTipText("");
        nombreLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        nombreLabel.setAlignmentX(0.5F);
        nombreLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        apellidoLabel.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        apellidoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        apellidoLabel.setToolTipText("");
        apellidoLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        apellidoLabel.setAlignmentX(0.5F);
        apellidoLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        MisFoliosLb.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        MisFoliosLb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MisFoliosLb.setText("Mis Oficios");
        MisFoliosLb.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        foliosLista.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(foliosLista);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(nombreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(EmpleadoLb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(apellidoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                        .addContainerGap())))
            .addComponent(jScrollPane3)
            .addComponent(MisFoliosLb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EmpleadoLb, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(apellidoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MisFoliosLb, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 907, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarAnioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarAnioBtnActionPerformed
       try {
        conexion.conectar();
         int anioJcalendar = jCalendario.getJCalendar().getYearChooser().getYear();
         
         switch (departamentos) {
                    case "Gerencia":
                    tabla = "datosgerencia";
                    break;
                    case "Subgerencia de Administración":
                    tabla = "datosadmin";
                    break;
                    case "Subgerencia Técnica":
                    tabla = "datostec";
                    break;
                    case "Subgerencia de Operación":
                    tabla = "datosopera";
                    break;
                    case "Subgerencia Juridica":
                    tabla = "datosjuri";
                    break;
                    default:
                    throw new IllegalArgumentException("Departamento no válido");
                }

        // Verificar si el año ya existe en la base de datos
        String sqlVerificar = "SELECT COUNT(*) FROM " + tabla + " WHERE anio = ?";
        
        try (PreparedStatement statementVerificar = conexion.getConnection().prepareStatement(sqlVerificar)) {
            statementVerificar.setInt(1, anioJcalendar);
            
            try (ResultSet rs = statementVerificar.executeQuery()) {
                if (rs.next()) {
                    int count = rs.getInt(1);
                    
                    if (count > 0) {
                        // El año ya existe en la base de datos
                        JOptionPane.showMessageDialog(this, "El año ya existe", "Error", JOptionPane.ERROR_MESSAGE);
                        return; // Salir del método
                    }
                }
            }
        }

        // Insertar el año en la base de datos
        String sqlInsertar = "INSERT INTO " + tabla + " (anio) VALUES (?)";
        
        try (PreparedStatement statementInsertar = conexion.getConnection().prepareStatement(sqlInsertar)) {
            statementInsertar.setInt(1, anioJcalendar);
            
            statementInsertar.executeUpdate();
            
            // Mostrar mensaje de éxito al usuario
            JOptionPane.showMessageDialog(this, "<html><body><center><h3>Año agregado correctamente <br>Ya puede generar el oficio</h3></center></body></html>");
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        // Mostrar mensaje de error al usuario
        JOptionPane.showMessageDialog(this, "Error al agregar el año" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_agregarAnioBtnActionPerformed

    private void acercaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acercaBtnActionPerformed
        JOptionPane.showMessageDialog(null, "<html><body><center><h3>Información del programa</h3></center>"
                + "<br>•Para generar un oficio con un año diferente al actual, ingrese el nuevo año desde el calendario. <br>"
                + "<br>•Para apartar oficios escriba en los campos disponibles <b>'APARTADO'</b></body></html>");
    }//GEN-LAST:event_acercaBtnActionPerformed

    private void BtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que quieres salir?", "Confirmar salida", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            dispose();
        } else {
            // No hacer nada
        }
    }//GEN-LAST:event_BtnSalirActionPerformed

    private void BtnMostarVentana2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMostarVentana2ActionPerformed
        Consulta p1 = new Consulta();
        p1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BtnMostarVentana2ActionPerformed

    private void btnGenFolioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenFolioActionPerformed

        try {

            //Obtener el texto del JTextArea y JTextField
            String textoAreaAsunto = TxtAreaAsunto.getText();
            String textoFieldDirigido = dirigidoTxtF.getText();

            //Verificar si los campos están vacios
            if( textoAreaAsunto.isEmpty() || textoFieldDirigido.isEmpty() ){

                //Mostrar un mensaje de advertencia
                JOptionPane.showMessageDialog(null, "Los campos deben de ser llenados, verifique por favor.");

            }else{

                //Validar que el campor textoFieldDirigido solo acepte caracteres tipo String
                if(!textoFieldDirigido.matches("[\\p{L} .]+")){

                    JOptionPane.showMessageDialog(null, "El campo 'Dirigido a' solo acepta palabras");
                    return;//Salir del método si la validacion falla

                }else{

                    //Ventana de confirmacion de datos
                    int confirmacion = JOptionPane.showConfirmDialog(null, "¿Los datos son correctos? Por favor verifique...", "AVISO", JOptionPane.YES_NO_OPTION);
                    if( confirmacion == JOptionPane.YES_OPTION ){

                        // Obtener el año seleccionado del JDateChooser
                        int anio = jCalendario.getJCalendar().getYearChooser().getYear();

                        // Obtener la fecha selecciona del JDateChooser
                        String fechaFormateada = ((JTextField) jCalendario.getDateEditor().getUiComponent()).getText();

                        //Crear instancia de la clase GeneradorFolio
                        GenerarFolio generar = new GenerarFolio((String) CmbDepartamentos.getSelectedItem(), anio, fechaFormateada);

                        //Llamar al metodo generarFolio y pasarle el departamento del usuario
                        folio = generar.generarFolio(System.getProperty("user.name"));

                        String folioGenerado = "<html><body><center><h2>" + folio + "</h2></center></body></html>";
                        JOptionPane.showMessageDialog(null, "<html><body><center>Oficio generado</center></body></html>\n" + folioGenerado);

                        // Crear un nuevo objeto para mandar a llamar la clase y el metodo para actualizar la lista de folio
                        consultaFoliosUsuarios consultador = new consultaFoliosUsuarios();
                        consultador.consultaFoliosEnLista(foliosLista);
                    }
                }

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "<html><body><center><h3>Error al generar el Oficio: " + ex.getMessage() +"</b></font></center></html>");
            return;
        }

        // Obtener valores de los campos del formulario
        String nombreUsuario = System.getProperty("user.name");
        String nombre = nombreLabel.getText();
        String apellido = apellidoLabel.getText();
        String puestoU = puestoUsuario;
        //String departamento = (String) CmbDepartamentos.getSelectedItem();
        String dirigidoA = dirigidoTxtF.getText();
        String elaboradoPor = EPorTextF.getText();
        String asunto = TxtAreaAsunto.getText();
        String fecha = ((JTextField) jCalendario.getDateEditor().getUiComponent()).getText();
        // Obtener el año seleccionado del JDateChooser
        int anio = jCalendario.getJCalendar().getYearChooser().getYear();

        try {
            // Obtener conexión a la base de datos
            //Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/generadorfolios", "root","");
            conexion.conectar();

            String textoAreaAsunto = TxtAreaAsunto.getText();
            String textoFieldDirigido = dirigidoTxtF.getText();

            //Verificar si los campos están vacias para no aguardar el mismo folio de nuevo
            if( textoAreaAsunto.isEmpty() || textoFieldDirigido.isEmpty() ){
                //No hacer nada
            }else{
                // Determinar en qué tabla guardar la información dependiendo del departamento
                //String tabla;
                switch (departamentos) {
                    case "Gerencia":
                    tabla = "datosgerencia";
                    break;
                    case "Subgerencia de Administración":
                    tabla = "datosadmin";
                    break;
                    case "Subgerencia Técnica":
                    tabla = "datostec";
                    break;
                    case "Subgerencia de Operación":
                    tabla = "datosopera";
                    break;
                    case "Subgerencia Juridica":
                    tabla = "datosjuri";
                    break;
                    default:
                    throw new IllegalArgumentException("Departamento no válido");
                }

                // Preparar sentencia SQL para insertar los datos en la tabla correspondiente
                String sql = "INSERT INTO " + tabla + " (IDempleado, folio, nombre, apellido, puesto, departamento, dirigidoA, elaboradoPor, asunto, fecha, anio) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

                PreparedStatement ps = conexion.getConnection().prepareStatement(sql);
                ps.setString(1, nombreUsuario);
                ps.setString(2, folio);
                ps.setString(3, nombre);
                ps.setString(4, apellido);
                ps.setString(5, puestoU);
                ps.setString(6, departamentos);
                ps.setString(7, dirigidoA);
                ps.setString(8, elaboradoPor);
                ps.setString(9, asunto);
                ps.setString(10, fecha);
                ps.setInt(11, anio);

                // Ejecutar sentencia SQL para insertar los datos
                ps.executeUpdate();

                // Cerrar conexión a la base de datos
                conexion.desconectar();

                // Mostrar mensaje de éxito
                JOptionPane.showMessageDialog(null, "<html><body><center><h3>Oficio guardado</h3></center></body></html>");
            }} catch (SQLException ex) {
                // Mostrar mensaje de error si hubo un problema al insertar los datos
                JOptionPane.showMessageDialog(null, "<html><center><font color='red'><b>Error al guardar oficio</b></font></center></html>" + ex.getMessage());
            } catch (IllegalArgumentException ex) {
                // Mostrar mensaje de error si el departamento no es válido
                JOptionPane.showMessageDialog(null, "Departamento no válido." + ex.getMessage());
            }

            //Limpiar los campos Dirigido y Asunto
            dirigidoTxtF.setText("");
            TxtAreaAsunto.setText("");

    }//GEN-LAST:event_btnGenFolioActionPerformed

    private void EPorTextFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EPorTextFActionPerformed

    }//GEN-LAST:event_EPorTextFActionPerformed

    private void dirigidoTxtFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dirigidoTxtFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dirigidoTxtFActionPerformed

    private void CmbDepartamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbDepartamentosActionPerformed
        // TODO add your handling code here:
        departamentos = CmbDepartamentos.getSelectedItem().toString();
        if( "Gerencia".equals(departamentos));
        if( "Subgerencia de Administración".equals(departamentos));
        if( "Subgerencia Técnica".equals(departamentos));
        if( "Subgerencia de Operación".equals(departamentos));
        if( "Subgerencia Juridica".equals(departamentos));
    }//GEN-LAST:event_CmbDepartamentosActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt){
        try{
            //Se crea una instancia de la clase ObtenerDatosUsuario y obtener el nombre de usuario de la PC
            ObtenerDatosUsuario datosUsuario = new ObtenerDatosUsuario();
            String nombreUsuario = System.getProperty("user.name");
            
            //Llamar al metodo obtenerDatosUsuario() con los campos correspondientes del formulario
            datosUsuario.obtenerDatosUsuario( nombreUsuario, nombreLabel ,apellidoLabel, CmbDepartamentos, EPorTextF);
            puestoUsuario = datosUsuario.getPuestoUsuario();
            
            //Cerrar la conexion con base de datos
            datosUsuario.cerrarConexion();
            
        }catch(SQLException ex){
            ex.printStackTrace();
        }

    }
                   
    private void inicializarValidacionDeNivel(){
        ValidacionDeNivel validador = new ValidacionDeNivel( CmbDepartamentos, jCalendario, BtnMostarVentana2, EPorTextF, agregarAnioBtn, btnGenFolio, TxtAreaAsunto, dirigidoTxtF);
         addWindowListener(new java.awt.event.WindowAdapter() {
           @Override
           public void windowOpened(java.awt.event.WindowEvent evt){
               validador.validar();
           }
        });
    }
    
    public void mostrarFolios() {
        consultaFoliosUsuarios consultador = new consultaFoliosUsuarios();
        addWindowListener( new java.awt.event.WindowAdapter() {
            @Override
            public void windowOpened( java.awt.event.WindowEvent evt){
               try {
                consultador.consultaFoliosEnLista(foliosLista);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al consultar folios: " + ex.getMessage());
            }
            }
        });
    }
    
    private void configurarCampoDirigido() {
    // Crear un DocumentFilter para limitar la longitud del campo textoFieldDirigido
    DocumentFilter lengthFilter = new DocumentFilter() {
        private final int maxLength = 50; // Longitud máxima permitida

        //@Override
        public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
            int currentLength = fb.getDocument().getLength();
            int insertLength = text != null ? text.length() : 0;
            int removeLength = length;
            int newLength = currentLength - removeLength + insertLength;

            if (newLength <= maxLength) {
                super.replace(fb, offset, length, text, attrs);
            } else {
                // Se puede agregar alguna acción cuando se excede la longitud máxima
                Toolkit.getDefaultToolkit().beep(); // Emitir un sonido de alerta
            }
        }
    };

    // Aplicar el DocumentFilter al campo textoFieldDirigido
    ((AbstractDocument) dirigidoTxtF.getDocument()).setDocumentFilter(lengthFilter);
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AsuntoLb;
    private javax.swing.JButton BtnMostarVentana2;
    private javax.swing.JToggleButton BtnSalir;
    private javax.swing.JComboBox<String> CmbDepartamentos;
    private javax.swing.JLabel DepartamentoLb;
    private javax.swing.JLabel DirigidoLb;
    private javax.swing.JTextField EPorTextF;
    private javax.swing.JLabel ElaboradoLb;
    private javax.swing.JLabel EmpleadoLb;
    private javax.swing.JLabel FechaLb;
    private javax.swing.JLabel MisFoliosLb;
    private javax.swing.JLabel TituloPrograma;
    private javax.swing.JTextArea TxtAreaAsunto;
    private javax.swing.JButton acercaBtn;
    private javax.swing.JButton agregarAnioBtn;
    private javax.swing.JLabel apellidoLabel;
    private javax.swing.JButton btnGenFolio;
    private javax.swing.JTextField dirigidoTxtF;
    private javax.swing.JList<String> foliosLista;
    private javax.swing.JLabel imgCAPUFE;
    private com.toedter.calendar.JDateChooser jCalendario;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel nombreLabel;
    // End of variables declaration//GEN-END:variables
}
